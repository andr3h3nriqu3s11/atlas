generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

//
//
//
// User related models
//
//
//

model User {

  id         String    @id @default(uuid())

  name       String    @unique

  password   String

  userType   String

  authorized Boolean

  tokens  Token[]
}

model Token {
  token         String  @id

  userId        String

  expireDate    DateTime

  user          User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}


//
//
// Setting related to settings
//
//

model WorldSetting {

  id          String @id @default(uuid())

  name        String @unique

  templates   Template[]

}

//
//
// Character Template related models
//
//

model Template {

  id             String          @id @default(uuid())

  worldSettingId String

  // ITEM - CHARACTER
  type           String

  name           String          @unique
  description    String?

  worldSetting   WorldSetting    @relation(references: [id], fields: [worldSettingId], onDelete: Cascade)
  templateFields TemplateField[]
}

model TemplateField {

  id             String        @id @default(uuid())
  templateId     String

  // Name of the field this is the internal name
  name           String

  // Label this is for the display name
  label          String

  // STRING | NUMBER | DROPBOX | BOOLEAN
  type           String

  // DROPBOX - will be enconded as value:text|value:text
  value          String

  defaultValue   String

  max            Int?
  min            Int?

  template       Template      @relation(references: [id], fields: [templateId], onDelete: Cascade)
}

//
//
//
// Character related models
//
//
//

//model Character {
//
//}
